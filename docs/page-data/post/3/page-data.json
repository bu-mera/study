{"componentChunkName":"component---src-templates-post-js","path":"/post/3","result":{"data":{"markdownRemark":{"html":"<h1>React Nativeでのデザインの考え方</h1>\n<p>React NativeのUI構築において、基本となるのがFlexboxです。\nすでに、CSSでも使っていると思いますが、同様の仕組みがReact Nativeにもあります。\n公式でも推奨とされているので、Flexboxを使っていきましょう。</p>\n<h2>Flexboxの基本</h2>\n<p>CSSでは、<code class=\"language-text\">display: flex;</code>と定義していたかと思いますが、React Nativeでは<code class=\"language-text\">flex: 1</code>と定義します。</p>\n<p>CSSと同様の仕組みが用意されているので<code class=\"language-text\">flex-direction</code>や<code class=\"language-text\">justify-content</code>、<code class=\"language-text\">align-items</code>などのプロパティがあるが、大きな違いとして<code class=\"language-text\">キャメルケース</code>で記載する必要があります。後ほどStyleSheetの記載方法で詳しくやろうと思います。</p>\n<h3>flexDirection</h3>\n<p>ここら辺は問題ないでしょう</p>\n<h3>justifyContent</h3>\n<p>ここら辺は問題ないでしょう</p>\n<h3>alignItems</h3>\n<p>ここら辺は問題ないでしょう</p>\n<h2>Styleの適用方法</h2>\n<p><code class=\"language-text\">StyleSheet.create</code>を使って定義します。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> StyleSheet <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-native'</span>\n\n<span class=\"token keyword\">const</span> styles <span class=\"token operator\">=</span> StyleSheet<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  container<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    flex<span class=\"token operator\">:</span> <span class=\"token number\">1</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>定義したstyleを下記のようにしてコンポーネントに割り当てます。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>View style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>styles<span class=\"token punctuation\">.</span>container<span class=\"token punctuation\">}</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>View<span class=\"token operator\">></span></code></pre></div>\n<p>また、配列を用いることで、複数のstyleを合成して割り当てることもできます。<br>\n同一の項目がある場合は、配列の後ろの要素の方が優先されます。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> styles <span class=\"token operator\">=</span> StyleSheet<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  style1<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    marginTop<span class=\"token operator\">:</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span>\n    backgroundColor<span class=\"token operator\">:</span> <span class=\"token string\">'red'</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  style2<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    marginBottom<span class=\"token operator\">:</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span>\n    backgroundColor<span class=\"token operator\">:</span> <span class=\"token string\">'blue'</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>View style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">[</span>styles<span class=\"token punctuation\">.</span>style1<span class=\"token punctuation\">,</span> styles<span class=\"token punctuation\">.</span>style2<span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>View<span class=\"token operator\">></span></code></pre></div>\n<p>上記の例の場合、下記のstyleが割り当てられます。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span>\n  marginTop<span class=\"token operator\">:</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span>\n  marginBottom<span class=\"token operator\">:</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span>\n  backgroundColor<span class=\"token operator\">:</span> <span class=\"token string\">'blue'</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2>実際にUIを構築していこう</h2>\n<p>以下演習では各演習用のJSファイル（例えば<code class=\"language-text\">lesson1.js</code>）を作成してください。</p>\n<p>各演習用のサンプルコード</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> StyleSheet<span class=\"token punctuation\">,</span> Text<span class=\"token punctuation\">,</span> View <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-native'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Lesson1</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>View style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>styles<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>View style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>styles<span class=\"token punctuation\">.</span>item<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>Text<span class=\"token operator\">></span><span class=\"token number\">1</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Text<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>View<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>View style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>styles<span class=\"token punctuation\">.</span>item<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>Text<span class=\"token operator\">></span><span class=\"token number\">2</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Text<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>View<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>View style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>styles<span class=\"token punctuation\">.</span>item<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>Text<span class=\"token operator\">></span><span class=\"token number\">3</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Text<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>View<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>View<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> styles <span class=\"token operator\">=</span> StyleSheet<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  body<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    flex<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  item<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    height<span class=\"token operator\">:</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span>\n    width<span class=\"token operator\">:</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span>\n    backgroundColor<span class=\"token operator\">:</span> <span class=\"token string\">'#bec6cc'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> Lesson1<span class=\"token punctuation\">;</span></code></pre></div>\n<p>作成したJSファイルを<code class=\"language-text\">App.js</code>にインポートして、反映してください。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> Lesson1 <span class=\"token keyword\">from</span> <span class=\"token string\">'./lesson1'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>Lesson1 <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>演習1:横並びにするためにStyleSheetを作ってください。</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>View<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>View<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Text<span class=\"token operator\">></span><span class=\"token number\">1</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Text<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>View<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>View<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Text<span class=\"token operator\">></span><span class=\"token number\">2</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Text<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>View<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>View<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Text<span class=\"token operator\">></span><span class=\"token number\">3</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Text<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>View<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>View<span class=\"token operator\">></span></code></pre></div>\n<h3>演習2:逆順に表示するためにStyleSheetを作ってください。（JSXは演習1と同様）</h3>\n<h3>演習3:等間隔で余白を開けて、縦並びするためにStyleSheetを作ってください。（JSXは演習1と同様）</h3>\n<h3>演習4:画面中央に要素を配置するためにStyleSheetを作ってください。</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>View<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>View<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Text<span class=\"token operator\">></span>center<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Text<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>View<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>View<span class=\"token operator\">></span></code></pre></div>\n<h3>演習5:下の画像のようなレイアウトを構築してください。上から高さが1:2:3となっています。（JSXは演習1と同様）</h3>\n<img src=\"/static/f0070026a05328f5006ad1ef4aea555d/image00003-01.png\" width=\"150\" alt=\"演習5のレイアウト\">\n<h3>演習6:下の画像のようなレイアウトを構築してください。機能の実装はしなくて良いです。</h3>\n<img src=\"/static/9d32c9b8d0601abdf223a6762e335568/image00003-02.jpg\" width=\"150\" alt=\"演習6のレイアウト\">\n<h2>追加</h2>\n<h3>Text</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Text <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-native'</span></code></pre></div>\n<p>テキストの表示に使用します。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>Text<span class=\"token operator\">></span>\n  text\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Text<span class=\"token operator\">></span></code></pre></div>\n<p>ネストさせて、一部のテキストのみへのstyleの適用や上書きすることも可能です。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>Text style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> fontWeight<span class=\"token operator\">:</span> <span class=\"token string\">'bold'</span><span class=\"token punctuation\">,</span> color<span class=\"token operator\">:</span> <span class=\"token string\">'blue'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n  text\n  <span class=\"token operator\">&lt;</span>Text style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> color<span class=\"token operator\">:</span> <span class=\"token string\">'red'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n    nestedText\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Text<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Text<span class=\"token operator\">></span></code></pre></div>\n<h3>ScrollView</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> ScrollView <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-native'</span></code></pre></div>\n<p>コンポーネントをScrollViewでラップすることで、スクロールできるようになります。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>ScrollView<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>Text<span class=\"token operator\">></span>\n    長文\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Text<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ScrollView<span class=\"token operator\">></span></code></pre></div>\n<h2>追加演習</h2>\n<p>以下演習ではダンダダン案件で使用されたUIの実装をしていただきます。<br>\nサムネイル画像・アイコンは実装せず、<code class=\"language-text\">View</code>で背景色もしくはボーダーを設定してください。 </p>\n<h3>追加演習1:下の画像のようなレイアウトを作成してください。</h3>\n<img src=\"/static/2336a41b50059dee67942f09b489a59b/image00003-03.png\" width=\"250\" alt=\"追加演習1のレイアウト\">\n<h3>追加演習2:下の画像のようなレイアウトを作成してください。</h3>\n<img src=\"/static/2e171c877bd558f26562b18f5183c881/image00003-04.png\" width=\"250\" alt=\"追加演習2のレイアウト\">\n<h3>追加演習3:下の画像のようなレイアウトを作成してください。</h3>\n<img src=\"/static/7deb566fec1254648ce8d9313b18832a/image00003-05.png\" width=\"250\" alt=\"追加演習3のレイアウト\">\n<h3>追加演習4:下の画像のようなレイアウトを作成してください。加えて、スクロールできるようにしてください。</h3>\n<img src=\"/static/9e5f4cf146cb80739d832e9163e31154/image00003-06.png\" width=\"250\" alt=\"追加演習4のレイアウト\">\n<h2>以下関連リンク</h2>\n<!-- ## 主要のコンポーネント・API -->\n<h3>StyleSheet</h3>\n<p><a href=\"https://reactnative.dev/docs/stylesheet\" target=\"_blank\" rel=\"noopener noreferrer\">ドキュメント</a><br>\n<a href=\"https://reactnative.dev/docs/style\" target=\"_blank\" rel=\"noopener noreferrer\">Style定義</a></p>\n<h3>View</h3>\n<p><a href=\"https://reactnative.dev/docs/view\" target=\"_blank\" rel=\"noopener noreferrer\">ドキュメント</a><br>\n<a href=\"https://reactnative.dev/docs/flexbox\" target=\"_blank\" rel=\"noopener noreferrer\">Flexboxレイアウト</a></p>\n<h3>Text</h3>\n<p><a href=\"https://reactnative.dev/docs/text\" target=\"_blank\" rel=\"noopener noreferrer\">ドキュメント</a></p>\n<h3>ScrollView</h3>\n<p><a href=\"https://reactnative.dev/docs/scrollview\" target=\"_blank\" rel=\"noopener noreferrer\">ドキュメント</a></p>\n<!--\n### Image\n[ドキュメント](https://reactnative.dev/docs/image)  \n[画像データ周り](https://reactnative.dev/docs/images)\n\n### TextInput\n[ドキュメント](https://reactnative.dev/docs/textinput) -->\n<!--\n## その他\n\n### FlatList\nリストデータ用のコンポーネント  \n画面で表示される部分のみレンダリングするので、多量のリストデータを表示するときに向いている  \n[ドキュメント](https://reactnative.dev/docs/flatlist)  \n\n### KeyboardAvoidingView\nテキストフォームにフォーカスしたとき、フォームがキーボードで隠れてしまわないように調整してくれるコンポーネント  \n[ドキュメント](https://reactnative.dev/docs/keyboardavoidingview)  \n\n### Linking\n[ドキュメント](https://reactnative.dev/docs/linking)  \n\n### StatusBar\n画面上部のステータスバーの制御  \n[ドキュメント](https://reactnative.dev/docs/statusbar) -->","fields":{"slug":"/post/3"},"frontmatter":{"title":"第2回 React Native -FlexboxとStyleSheet-","date":"2020/10/29","tags":["React Native"]}}},"pageContext":{"prev":{"html":"<h1>イベントをつける</h1>\n<p>React.jsでは、<code class=\"language-text\">onClick</code>とかとか使っていたかと思います。（<a href=\"https://ja.reactjs.org/docs/events.html\" target=\"_blank\" rel=\"noopener noreferrer\">他にも</a>）\nReact Nativeでは<code class=\"language-text\">onPress</code>を使います。\nReact.jsの場合は、Dom要素に<code class=\"language-text\">onClick</code>を指定すればイベントを付与することができました。が、React Nativeでは<code class=\"language-text\">Button</code>と<code class=\"language-text\">Text</code>、<code class=\"language-text\">Pressable</code>コンポーネントのみにしかありません。\n<em>※ v0.63から新しく<a href=\"https://reactnative.dev/docs/pressable\" target=\"_blank\" rel=\"noopener noreferrer\"><code class=\"language-text\">Pressable</code></a>コンポーネントが追加されました。</em></p>\n<div class=\"gatsby-highlight\" data-language=\"js:title=ok\"><pre class=\"language-js:title=ok\"><code class=\"language-js:title=ok\">&lt;Button onPress={ () =&gt; { console.log(&#39;hoge&#39;) } } title=&quot;button&quot; /&gt;\n&lt;Text onPress={ () =&gt; { console.log(&#39;hoge&#39;) } }&gt;button&lt;/Text&gt;</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"js:title=ng\"><pre class=\"language-js:title=ng\"><code class=\"language-js:title=ng\">&lt;View onPress={ () =&gt; { console.log(&#39;hoge&#39;) } }&gt;\n  &lt;Text&gt;button&lt;/Text&gt;\n&lt;/View&gt;\n&lt;Image\n  onPress={ () =&gt; { console.log(&#39;hoge&#39;) } }\n  ...\n/&gt;</code></pre></div>\n<h3>Button</h3>\n<p><a href=\"https://reactnative.dev/docs/button\" target=\"_blank\" rel=\"noopener noreferrer\">https://reactnative.dev/docs/button</a></p>\n<h3>Text</h3>\n<p><a href=\"https://reactnative.dev/docs/text\" target=\"_blank\" rel=\"noopener noreferrer\">https://reactnative.dev/docs/text</a></p>\n<h3>Pressable</h3>\n<p><a href=\"https://reactnative.dev/docs/pressable\" target=\"_blank\" rel=\"noopener noreferrer\">https://reactnative.dev/docs/pressable</a></p>\n<h2>他にもないの？</h2>\n<p>あります。\nリストの親コンポーネントに<code class=\"language-text\">Button</code>は使いませんよね？<code class=\"language-text\">View</code>を使うと思います。</p>\n<div class=\"gatsby-code-title\">こんな感じで</div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>View style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span> styles<span class=\"token punctuation\">.</span>list <span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>View style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span> styles<span class=\"token punctuation\">.</span>listItem <span class=\"token punctuation\">}</span> onPress<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Text<span class=\"token operator\">></span>リスト<span class=\"token number\">1</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Text<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>View<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>View onPress<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Text<span class=\"token operator\">></span>リスト<span class=\"token number\">2</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Text<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>View<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>View<span class=\"token operator\">></span></code></pre></div>\n<p>ただ、<code class=\"language-text\">View</code>コンポーネントにはonPressプロパティは存在しないので、いくらタップしてもイベントは発火しません。\nそんな時、、、\nReact Nativeでは、<code class=\"language-text\">TouchableHighlight</code>や<code class=\"language-text\">TouchableOpacity</code>、<code class=\"language-text\">Touchablewithoutfeedback</code>コンポーネントが用意されている。用途に合わせて、それぞれのコンポーネントを使いわて使いましょう。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>View style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span> styles<span class=\"token punctuation\">.</span>list <span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>TouchableOpacity style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span> styles<span class=\"token punctuation\">.</span>listItem <span class=\"token punctuation\">}</span> onPress<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Text<span class=\"token operator\">></span>リスト<span class=\"token number\">1</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Text<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>TouchableOpacity<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>TouchableOpacity onPress<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Text<span class=\"token operator\">></span>リスト<span class=\"token number\">2</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Text<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>TouchableOpacity<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>View<span class=\"token operator\">></span></code></pre></div>\n<h2>ViewでTouchableXxxxxを囲わなくても大丈夫なの？</h2>\n<p>TouchableOpacity、TouchableHighlight、Touchablewithoutfeedbackは、<code class=\"language-text\">Animated.View</code>でwrapされています。</p>\n<div class=\"gatsby-code-title\">node_modules/react-native/Libraries/Components/Touchable/TouchableOpacity.js</div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// ...省略</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>Node <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// BACKWARD-COMPATIBILITY: Focus and blur events were never supported before</span>\n    <span class=\"token comment\">// adopting `Pressability`, so preserve that behavior.</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n      onBlur<span class=\"token punctuation\">,</span>\n      onFocus<span class=\"token punctuation\">,</span>\n      <span class=\"token operator\">...</span>eventHandlersWithoutBlurAndFocus\n    <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>pressability<span class=\"token punctuation\">.</span><span class=\"token function\">getEventHandlers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token operator\">&lt;</span>Animated<span class=\"token punctuation\">.</span>View\n        <span class=\"token comment\">// ...省略</span>\n        <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Animated<span class=\"token punctuation\">.</span>View<span class=\"token operator\">></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// ...省略</span></code></pre></div>\n<p><code class=\"language-text\">Animated.View</code>を見てみると、</p>\n<div class=\"gatsby-highlight\" data-language=\"js:title=node_modules/react-native/libraries/animated/src/components/animatedview.js\"><pre class=\"language-js:title=node_modules/react-native/libraries/animated/src/components/animatedview.js\"><code class=\"language-js:title=node_modules/react-native/libraries/animated/src/components/animatedview.js\">import * as React from &#39;react&#39;;\nconst View = require(&#39;../../../Components/View/View&#39;);\nconst createAnimatedComponent = require(&#39;../createAnimatedComponent&#39;);\nimport type {AnimatedComponentType} from &#39;../createAnimatedComponent&#39;;\nmodule.exports = (createAnimatedComponent(View): AnimatedComponentType&lt;\n  React.ElementConfig&lt;typeof View&gt;,\n  React.ElementRef&lt;typeof View&gt;,\n&gt;);</code></pre></div>\n<p>わかりますね。Viewが使われてます。\nなので、TouchableXxxxxはViewでwrapしなくても大丈夫です。</p>\n<h2>各TouchableXxxxxコンポーネントの特徴</h2>\n<h3>TouchableHighlight</h3>\n<p><a href=\"https://reactnative.dev/docs/touchablehighlight\" target=\"_blank\" rel=\"noopener noreferrer\">https://reactnative.dev/docs/touchablehighlight</a></p>\n<ul>\n<li>wrapされた要素が（タップ時）ハイライトされる</li>\n<li>\n<p>ハイライトの詳細設定が可能（ドキュメント見てね）</p>\n<h3>TouchableOpacity</h3>\n<p><a href=\"https://reactnative.dev/docs/touchableopacity\" target=\"_blank\" rel=\"noopener noreferrer\">https://reactnative.dev/docs/touchableopacity</a></p>\n</li>\n<li>wrapされた要素が（タップ時）透過される</li>\n<li>\n<p>透過の詳細設定が可能（ドキュメント見てね）</p>\n<h3>Touchablewithoutfeedback</h3>\n<p><a href=\"https://reactnative.dev/docs/touchablewithoutfeedback\" target=\"_blank\" rel=\"noopener noreferrer\">https://reactnative.dev/docs/touchablewithoutfeedback</a></p>\n</li>\n<li>\n<p>イベントの付与のみ</p>\n<h2>TouchableXxxxxはonPressだけじゃない</h2>\n<p><code class=\"language-text\">Button</code>コンポーネントは<code class=\"language-text\">onPress</code>しかプロパティを持ちません。\nしかし、TouchableXxxxxは、<code class=\"language-text\">onPress</code>の他に、<code class=\"language-text\">onPressIn</code>タップされた時、<code class=\"language-text\">onPressOut</code>タップが外れた時にそれぞれ発火します。</p>\n<h2>発火される順番は？</h2>\n<p><code class=\"language-text\">onPressIn</code>→<code class=\"language-text\">onPressOut</code>→<code class=\"language-text\">onPress</code>の順です。</p>\n<h2>デバッグ方法は？</h2>\n<p>jsと同様<code class=\"language-text\">console.log</code>や<code class=\"language-text\">alert</code>を使うことで、logを出力することができる。</p>\n</li>\n</ul>\n<h1>ノッチ対応</h1>\n<p>2018年7月から、アップデートされるすべてのiOSアプリがノッチ対応を必須としなければならなくなりました。\nReact Nativeでは、<code class=\"language-text\">SafeAreaView</code>コンポーネントが用意されているのでSafeAreaViewを使い対応していきます。</p>\n<h2>SafeAreaViewって？</h2>\n<p>SafeAreaViewはiOSバージョン11以降(iPhone X以降)のデバイスのみに適用され、Androidの場合は適応されません。</p>\n<!-- もしAndroidにも対応させたい場合は`Platform.OS`でOSの判定をする必要があります。\n```js\nconst styles = StyleSheet.create({\n  androidSafeAreaView: {\n    …,\n    paddingTop: Platform.OS === 'android' ? 25 : 0\n  }\n})\n…\nreturn (\n  <SafeAreaView style={ styles.androidSafeAreaView }>\n    …\n  </SafeAreaView>\n)\n…\n``` -->\n<p>iPhone11（14.1）、iPhone8（14.1）、Android端末で下記のレイアウトを確認してみましょう。</p>\n<ol>\n<li>ノッチ対応なし</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">…\n<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n  <span class=\"token operator\">&lt;</span>View style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> backgroundColor<span class=\"token operator\">:</span> <span class=\"token string\">'orange'</span><span class=\"token punctuation\">,</span> flex<span class=\"token operator\">:</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>View style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> width<span class=\"token operator\">:</span> <span class=\"token number\">50</span><span class=\"token punctuation\">,</span> height<span class=\"token operator\">:</span> <span class=\"token number\">50</span><span class=\"token punctuation\">,</span> backgroundColor<span class=\"token operator\">:</span> <span class=\"token string\">'blue'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>View<span class=\"token operator\">></span>\n<span class=\"token punctuation\">)</span>\n…</code></pre></div>\n<img src=\"/static/5553f8b7e1047517fadbb83c66c46bf7/001.png\" width=\"250\" alt=\"ノッチ対応なし\">\n<ol start=\"2\">\n<li>\n<p>ノッチ対応あり</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">…\n<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n<span class=\"token operator\">&lt;</span>SafeAreaView style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> flex<span class=\"token operator\">:</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>View style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> backgroundColor<span class=\"token operator\">:</span> <span class=\"token string\">'orange'</span><span class=\"token punctuation\">,</span> flex<span class=\"token operator\">:</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>View style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> width<span class=\"token operator\">:</span> <span class=\"token number\">50</span><span class=\"token punctuation\">,</span> height<span class=\"token operator\">:</span> <span class=\"token number\">50</span><span class=\"token punctuation\">,</span> backgroundColor<span class=\"token operator\">:</span> <span class=\"token string\">'blue'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>View<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>SafeAreaView<span class=\"token operator\">></span>\n<span class=\"token punctuation\">)</span>\n…</code></pre></div>\n<img src=\"/static/f9ba4769f654a1a1b739fe638d03ddb2/002.png\" width=\"250\" alt=\"ノッチ対応あり\">\n</li>\n</ol>\n<h1>画面遷移（基礎編）</h1>\n<p>画面遷移には<code class=\"language-text\">react-navigation</code>を使用します。</p>\n<!-- \n## ナビゲーションの種類\n\n### スタックナビゲーター\n\n### タブナビゲーター -->\n<h2>導入</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">yarn add @react-navigation/native @react-navigation/stack\nyarn add react-native-reanimated react-native-gesture-handler react-native-screens react-native-safe-area-context @react-native-community/masked-view</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">cd ios\npod install</code></pre></div>\n<p>or</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npx pod-install ios</code></pre></div>\n<!-- TODO:CocoaPodsやGradleの軽い説明を挟む -->\n<h2>画面遷移の準備</h2>\n<p>App.js</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token string\">'react-native-gesture-handler'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> NavigationContainer <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@react-navigation/native'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>NavigationContainer<span class=\"token operator\">></span>\n      <span class=\"token punctuation\">{</span><span class=\"token comment\">/* Rest of your app code */</span><span class=\"token punctuation\">}</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>NavigationContainer<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2>スタックナビゲーターの実装</h2>\n<p>例として、<code class=\"language-text\">HomeScreen</code>と<code class=\"language-text\">DetailsScreen</code>を作成し、<code class=\"language-text\">HomeScreen</code>から<code class=\"language-text\">DetailsScreen</code>へ遷移できるようにします。</p>\n<p>App.js</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token string\">'react-native-gesture-handler'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> NavigationContainer <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@react-navigation/native'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> createStackNavigator <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@react-navigation/stack'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> Stack <span class=\"token operator\">=</span> <span class=\"token function\">createStackNavigator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">HomeScreen</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> navigation <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>View style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> flex<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> justifyContent<span class=\"token operator\">:</span> <span class=\"token string\">'center'</span><span class=\"token punctuation\">,</span> alignItems<span class=\"token operator\">:</span> <span class=\"token string\">'center'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Text<span class=\"token operator\">></span>Home<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Text<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Button\n        title<span class=\"token operator\">=</span><span class=\"token string\">\"Go to Details\"</span>\n        onPress<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> navigation<span class=\"token punctuation\">.</span><span class=\"token function\">navigate</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Details\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span>\n      <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>View<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">DetailsScreen</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>View style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> flex<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> justifyContent<span class=\"token operator\">:</span> <span class=\"token string\">'center'</span><span class=\"token punctuation\">,</span> alignItems<span class=\"token operator\">:</span> <span class=\"token string\">'center'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Text<span class=\"token operator\">></span>Details<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Text<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>View<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>NavigationContainer<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Stack<span class=\"token punctuation\">.</span>Navigator initialRouteName<span class=\"token operator\">=</span><span class=\"token string\">\"Home\"</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>Stack<span class=\"token punctuation\">.</span>Screen name<span class=\"token operator\">=</span><span class=\"token string\">\"Home\"</span> component<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>HomeScreen<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>Stack<span class=\"token punctuation\">.</span>Screen name<span class=\"token operator\">=</span><span class=\"token string\">\"Details\"</span> component<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>DetailsScreen<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Stack<span class=\"token punctuation\">.</span>Navigator<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>NavigationContainer<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<img src=\"/static/f578f2481ce86ee5dd502cbbce786b5a/003.png\" width=\"250\" alt=\"HomeScreen\">\n<img src=\"/static/34d555bdd12d6133c408ea965ef5ba90/004.png\" width=\"250\" alt=\"DetailsScreen\">","fields":{"slug":"/post/5"},"frontmatter":{"date":"2020-11-12","title":"第4回 React Native -イベント・ノッチ・画面遷移-","tags":["React Native"],"active":1}},"next":{"html":"<h1>React Native 勉強会 第2回 -View-</h1>\n<h2>主要のコンポーネント・API</h2>\n<h3>StyleSheet</h3>\n<p><a href=\"https://reactnative.dev/docs/style\" target=\"_blank\" rel=\"noopener noreferrer\">Style定義</a></p>\n<h3>View</h3>\n<p><a href=\"https://reactnative.dev/docs/view\" target=\"_blank\" rel=\"noopener noreferrer\">ドキュメント</a><br>\n<a href=\"https://reactnative.dev/docs/flexbox\" target=\"_blank\" rel=\"noopener noreferrer\">Flexboxレイアウト</a></p>\n<h3>Text</h3>\n<p><a href=\"https://reactnative.dev/docs/text\" target=\"_blank\" rel=\"noopener noreferrer\">ドキュメント</a></p>\n<h3>Image</h3>\n<p><a href=\"https://reactnative.dev/docs/image\" target=\"_blank\" rel=\"noopener noreferrer\">ドキュメント</a><br>\n<a href=\"https://reactnative.dev/docs/images\" target=\"_blank\" rel=\"noopener noreferrer\">画像データ周り</a></p>\n<h3>TextInput</h3>\n<p><a href=\"https://reactnative.dev/docs/textinput\" target=\"_blank\" rel=\"noopener noreferrer\">ドキュメント</a></p>\n<h3>ScrollView</h3>\n<p><a href=\"https://reactnative.dev/docs/scrollview\" target=\"_blank\" rel=\"noopener noreferrer\">ドキュメント</a></p>\n<h2>その他</h2>\n<h3>FlatList</h3>\n<p>リストデータ用のコンポーネント<br>\n画面で表示される部分のみレンダリングするので、多量のリストデータを表示するときに向いている<br>\n<a href=\"https://reactnative.dev/docs/flatlist\" target=\"_blank\" rel=\"noopener noreferrer\">ドキュメント</a>  </p>\n<h3>KeyboardAvoidingView</h3>\n<p>テキストフォームにフォーカスしたとき、フォームがキーボードで隠れてしまわないように調整してくれるコンポーネント<br>\n<a href=\"https://reactnative.dev/docs/keyboardavoidingview\" target=\"_blank\" rel=\"noopener noreferrer\">ドキュメント</a>  </p>\n<h3>Linking</h3>\n<p><a href=\"https://reactnative.dev/docs/linking\" target=\"_blank\" rel=\"noopener noreferrer\">ドキュメント</a>  </p>\n<h3>StatusBar</h3>\n<p>画面上部のステータスバーの制御<br>\n<a href=\"https://reactnative.dev/docs/statusbar\" target=\"_blank\" rel=\"noopener noreferrer\">ドキュメント</a></p>","fields":{"slug":"/post/2"},"frontmatter":{"date":"2020-10-29","title":"第2回 React Native -View-","tags":["React Native"],"active":0}}}},"staticQueryHashes":["63159454"]}