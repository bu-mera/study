{"componentChunkName":"component---src-templates-post-js","path":"/post/10","result":{"data":{"markdownRemark":{"html":"<h1>永続化</h1>\n<p>アプリではデータの永続化が必要不可欠です。</p>\n<ul>\n<li>オフラインでも動くようにしたい</li>\n<li>ログイン情報を保持したい</li>\n</ul>\n<p>永続化用のライブラリはいくつもあります。</p>\n<!-- ## AsyncStorageとRealm -->\n<h2><a href=\"https://github.com/realm/realm-js\" target=\"_blank\" rel=\"noopener noreferrer\">Realm</a></h2>\n<p>ネイティブチームでも扱っているモバイルアプリケーション向けデータベースです。</p>\n<h3>メリット</h3>\n<ul>\n<li>導入・使い方が楽</li>\n<li>高速なデータベースアクセス</li>\n<li><a href=\"https://realm.io/jp/docs/javascript/latest#%E3%82%A4%E3%83%B3%E3%83%88%E3%83%AD%E3%83%80%E3%82%AF%E3%82%B7%E3%83%A7%E3%83%B3\" target=\"_blank\" rel=\"noopener noreferrer\">日本語ドキュメント</a>もある</li>\n</ul>\n<h3>導入</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ yarn add realm\n$ npx pod-install ios</code></pre></div>\n<h3>使い方</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> Realm <span class=\"token keyword\">from</span> <span class=\"token string\">'realm'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// データモデルの定義</span>\n<span class=\"token keyword\">const</span> CarSchema <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  name<span class=\"token operator\">:</span> <span class=\"token string\">'Car'</span><span class=\"token punctuation\">,</span>\n  properties<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    make<span class=\"token operator\">:</span>  <span class=\"token string\">'string'</span><span class=\"token punctuation\">,</span>\n    model<span class=\"token operator\">:</span> <span class=\"token string\">'string'</span><span class=\"token punctuation\">,</span>\n    miles<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>type<span class=\"token operator\">:</span> <span class=\"token string\">'int'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">default</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> PersonSchema <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  name<span class=\"token operator\">:</span> <span class=\"token string\">'Person'</span><span class=\"token punctuation\">,</span>\n  properties<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    name<span class=\"token operator\">:</span>     <span class=\"token string\">'string'</span><span class=\"token punctuation\">,</span>\n    birthday<span class=\"token operator\">:</span> <span class=\"token string\">'date'</span><span class=\"token punctuation\">,</span>\n    cars<span class=\"token operator\">:</span>     <span class=\"token punctuation\">{</span>type<span class=\"token operator\">:</span> <span class=\"token string\">'list'</span><span class=\"token punctuation\">,</span> objectType<span class=\"token operator\">:</span> <span class=\"token string\">'Car'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    picture<span class=\"token operator\">:</span>  <span class=\"token punctuation\">{</span>type<span class=\"token operator\">:</span> <span class=\"token string\">'data'</span><span class=\"token punctuation\">,</span> optional<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// optional property</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n…\n\n<span class=\"token comment\">// Initialize a Realm with Car and Person models</span>\nRealm<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>schema<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>CarSchema<span class=\"token punctuation\">,</span> PersonSchema<span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">realm</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Create Realm objects and write to local storage</span>\n    realm<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> myCar <span class=\"token operator\">=</span> realm<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Car'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n        make<span class=\"token operator\">:</span> <span class=\"token string\">'Honda'</span><span class=\"token punctuation\">,</span>\n        model<span class=\"token operator\">:</span> <span class=\"token string\">'Civic'</span><span class=\"token punctuation\">,</span>\n        miles<span class=\"token operator\">:</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      myCar<span class=\"token punctuation\">.</span>miles <span class=\"token operator\">+=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Update a property value</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Query Realm for all cars with a high mileage</span>\n    <span class=\"token keyword\">const</span> cars <span class=\"token operator\">=</span> realm<span class=\"token punctuation\">.</span><span class=\"token function\">objects</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Car'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">filtered</span><span class=\"token punctuation\">(</span><span class=\"token string\">'miles > 1000'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Will return a Results object with our 1 car</span>\n    <span class=\"token comment\">// cars.length => 1</span>\n\n    <span class=\"token comment\">// Add another car</span>\n    realm<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> myCar <span class=\"token operator\">=</span> realm<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Car'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n        make<span class=\"token operator\">:</span> <span class=\"token string\">'Ford'</span><span class=\"token punctuation\">,</span>\n        model<span class=\"token operator\">:</span> <span class=\"token string\">'Focus'</span><span class=\"token punctuation\">,</span>\n        miles<span class=\"token operator\">:</span> <span class=\"token number\">2000</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Query results are updated in realtime</span>\n    <span class=\"token comment\">// cars.length => 2</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">error</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><a href=\"https://github.com/realm/realm-js/tree/master/examples/ReactExample\" target=\"_blank\" rel=\"noopener noreferrer\">サンプル</a></p>\n<h3>データモデルの定義</h3>\n<p>スキーマの情報とはモデルオブジェクトの名前、およびプロパティの名前や型などを示す一連の属性です。</p>\n<p>型は基本的な型に加えて、objectTypeやリスト型が指定できます。またoptional（NULL可）やdefault（デフォルト値）についてもここで指定します。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> CarSchema <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// スキーマ名と被らないnameを定義</span>\n  name<span class=\"token operator\">:</span> <span class=\"token string\">'Car'</span><span class=\"token punctuation\">,</span>\n  properties<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    make<span class=\"token operator\">:</span>  <span class=\"token string\">'string'</span><span class=\"token punctuation\">,</span>\n    model<span class=\"token operator\">:</span> <span class=\"token string\">'string'</span><span class=\"token punctuation\">,</span>\n    miles<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>type<span class=\"token operator\">:</span> <span class=\"token string\">'int'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">default</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>基本的な型</h3>\n<table>\n<thead>\n<tr>\n<th>realm上での型</th>\n<th>対応しているjsの型</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>bool</td>\n<td>Boolean</td>\n</tr>\n<tr>\n<td>int<br>float<br>double</td>\n<td>Number</td>\n</tr>\n<tr>\n<td>string</td>\n<td>String</td>\n</tr>\n<tr>\n<td>data</td>\n<td>ArrayBuffer</td>\n</tr>\n<tr>\n<td>date</td>\n<td>Date</td>\n</tr>\n</tbody>\n</table>\n<h3>データの定義方法</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> CarSchema <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  name<span class=\"token operator\">:</span> <span class=\"token string\">'Car'</span><span class=\"token punctuation\">,</span>\n  properties<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 下記のtypeプロパティの定義はどちらも同じ意味です</span>\n    make<span class=\"token operator\">:</span>   <span class=\"token punctuation\">{</span>type<span class=\"token operator\">:</span> <span class=\"token string\">'string'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    model<span class=\"token operator\">:</span> <span class=\"token string\">'string'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>デフォルト値</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> CarSchema <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  name<span class=\"token operator\">:</span> <span class=\"token string\">'Car'</span><span class=\"token punctuation\">,</span>\n  properties<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    make<span class=\"token operator\">:</span>  <span class=\"token punctuation\">{</span>type<span class=\"token operator\">:</span> <span class=\"token string\">'string'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    model<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>type<span class=\"token operator\">:</span> <span class=\"token string\">'string'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    drive<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>type<span class=\"token operator\">:</span> <span class=\"token string\">'string'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">default</span><span class=\"token operator\">:</span> <span class=\"token string\">'fwd'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    miles<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>type<span class=\"token operator\">:</span> <span class=\"token string\">'int'</span><span class=\"token punctuation\">,</span>    <span class=\"token keyword\">default</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\nrealm<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// `miles`プロパティは何も指定していないのでデフォルト値の`0`が設定されます。</span>\n  <span class=\"token comment\">// また`drive`プロパティはここで指定しているので、デフォルト値は使用されず指定した値で上書きされます。</span>\n  realm<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Car'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>make<span class=\"token operator\">:</span> <span class=\"token string\">'Honda'</span><span class=\"token punctuation\">,</span> model<span class=\"token operator\">:</span> <span class=\"token string\">'Accord'</span><span class=\"token punctuation\">,</span> drive<span class=\"token operator\">:</span> <span class=\"token string\">'awd'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>プライマリーキー</h3>\n<p><code class=\"language-text\">string</code>型および<code class=\"language-text\">int</code>型のプロパティについては<code class=\"language-text\">primaryKey</code>属性を用いてプライマリキーとして指定できます。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> PersonSchema <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  name<span class=\"token operator\">:</span> <span class=\"token string\">'Person'</span><span class=\"token punctuation\">,</span>\n  primaryKey<span class=\"token operator\">:</span> <span class=\"token string\">'id'</span><span class=\"token punctuation\">,</span>\n  properties<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    id<span class=\"token operator\">:</span>   <span class=\"token string\">'int'</span><span class=\"token punctuation\">,</span>    <span class=\"token comment\">// プライマリキー</span>\n    name<span class=\"token operator\">:</span> <span class=\"token string\">'string'</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>書き込み</h3>\n<p>Realmへの書き込み（オブジェクトの追加、変更、削除）は、<code class=\"language-text\">write</code>メソッドを用います。</p>\n<h4>オブジェクトの作成</h4>\n<p>オブジェクトの生成には<code class=\"language-text\">create</code>メソッドを使用します。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n  realm<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    realm<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Car'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>make<span class=\"token operator\">:</span> <span class=\"token string\">'Honda'</span><span class=\"token punctuation\">,</span> model<span class=\"token operator\">:</span> <span class=\"token string\">'Accord'</span><span class=\"token punctuation\">,</span> drive<span class=\"token operator\">:</span> <span class=\"token string\">'awd'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Error on creation\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>子のプロパティも含めて一度に作成することもできます。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">realm<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  realm<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Person'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n    name<span class=\"token operator\">:</span> <span class=\"token string\">'Joe'</span><span class=\"token punctuation\">,</span>\n    car<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>make<span class=\"token operator\">:</span> <span class=\"token string\">'Honda'</span><span class=\"token punctuation\">,</span> model<span class=\"token operator\">:</span> <span class=\"token string\">'Accord'</span><span class=\"token punctuation\">,</span> drive<span class=\"token operator\">:</span> <span class=\"token string\">'awd'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<!-- #### オブジェクトの変更\n\n```js\nrealm.write(() => {\n  car.miles = 1100;\n});\n\n``` -->\n<p><code class=\"language-text\">primaryKey</code>を使用している場合、オブジェクトがすでに存在する場合は更新、存在しない場合は新しく追加というように、追加または更新を一度に行うことができます。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">realm<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Bookオブジェクトを生成して保存します</span>\n  realm<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Book'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>primaryId<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> title<span class=\"token operator\">:</span> <span class=\"token string\">'Recipes'</span><span class=\"token punctuation\">,</span> price<span class=\"token operator\">:</span> <span class=\"token number\">35</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// 上で保存したBookオブジェクトのPriceプロパティをプライマリキーを指定して更新します</span>\n  <span class=\"token comment\">// この場合、第3引数をtrueにする</span>\n  realm<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Book'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>primaryId<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> price<span class=\"token operator\">:</span> <span class=\"token number\">55</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h4>オブジェクトの削除</h4>\n<p><code class=\"language-text\">delete</code>メソッドに削除したいオブジェクト等を渡すことで削除することができます。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">realm<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Bookオブジェクトを作成し、保存します</span>\n  <span class=\"token keyword\">let</span> book <span class=\"token operator\">=</span> realm<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Book'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>primaryId<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> title<span class=\"token operator\">:</span> <span class=\"token string\">'Recipes'</span><span class=\"token punctuation\">,</span> price<span class=\"token operator\">:</span> <span class=\"token number\">35</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Bookオブジェクトを削除します</span>\n  realm<span class=\"token punctuation\">.</span><span class=\"token function\">delete</span><span class=\"token punctuation\">(</span>book<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// また、１度に複数のオブジェクトを削除できます</span>\n  <span class=\"token keyword\">let</span> allBooks <span class=\"token operator\">=</span> realm<span class=\"token punctuation\">.</span><span class=\"token function\">objects</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Book'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  realm<span class=\"token punctuation\">.</span><span class=\"token function\">delete</span><span class=\"token punctuation\">(</span>allBooks<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// すべてのBookオブジェクトを削除します</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>クエリによるデータの取得</h3>\n<p>Realmのクエリは、どれか１つのオブジェクト型を指定して保存されているオブジェクトをRealmから取得します。</p>\n<!-- 検索条件を指定して結果をフィルタしたり、並べ替えることもできます。すべてのクエリと検索結果のプロパティアクセスは自動的に遅延されます。実際のデータはオブジェクトとプロパティにアクセスしたときにのみ取得されます。このことにより、大量のデータでも効率よく扱うことができます。 -->\n<p><code class=\"language-text\">object</code>メソッドは<a href=\"https://realm.io/docs/javascript/6.0.0/api/Realm.Results.html\" target=\"_blank\" rel=\"noopener noreferrer\"><code class=\"language-text\">Results</code></a>オブジェクトを返します。</p>\n<p><code class=\"language-text\">Results</code>は検索結果を表します。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> dogs <span class=\"token operator\">=</span> realm<span class=\"token punctuation\">.</span><span class=\"token function\">objects</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Dog'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Realmに保存されているすべてのDogオブジェクトを取得します</span></code></pre></div>\n<h4>フィルタリング</h4>\n<p><code class=\"language-text\">filtered</code>メソッドに<a href=\"https://realm.io/docs/javascript/6.0.0/api/tutorial-query-language.html\" target=\"_blank\" rel=\"noopener noreferrer\">クエリ文字列</a>で検索条件を渡すことで、フィルタリングすることができます。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> dogs <span class=\"token operator\">=</span> realm<span class=\"token punctuation\">.</span><span class=\"token function\">objects</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Dog'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Realmに保存されているすべてのDogオブジェクトを取得します</span>\n<span class=\"token keyword\">let</span> whiteDogs <span class=\"token operator\">=</span> dogs<span class=\"token punctuation\">.</span><span class=\"token function\">filtered</span><span class=\"token punctuation\">(</span><span class=\"token string\">'color = \"white\" AND name BEGINSWITH \"B\"'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h4>ソート</h4>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> hondas <span class=\"token operator\">=</span> realm<span class=\"token punctuation\">.</span><span class=\"token function\">objects</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Car'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">filtered</span><span class=\"token punctuation\">(</span><span class=\"token string\">'make = \"Honda\"'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// ホンダ製（make = \"Honda\"）かつ、走行距離（miles）の昇順</span>\n<span class=\"token keyword\">let</span> sortedHondas <span class=\"token operator\">=</span> hondas<span class=\"token punctuation\">.</span><span class=\"token function\">sorted</span><span class=\"token punctuation\">(</span><span class=\"token string\">'miles'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","fields":{"slug":"/post/10"},"frontmatter":{"title":"第9回 React Native -永続化-","date":"2020/12/17","tags":["React Native"]}}},"pageContext":{"prev":null,"next":{"html":"<h1>プッシュ通知</h1>\n<p>FirebaseのFirebase Cloud Messaging（FCM）を使用します。</p>\n<h2>導入</h2>\n<p>実装には <a href=\"https://rnfirebase.io/\" target=\"_blank\" rel=\"noopener noreferrer\">REACT NATIVE FIREBASE（v6）</a> の <a href=\"https://rnfirebase.io/messaging/usage\" target=\"_blank\" rel=\"noopener noreferrer\">Cloud Messaging</a> を使用します。</p>\n<!-- ただ、ローカル通知に関してはv6ではサポート外なので、ローカル通知の実装には別途対応が必要です。 -->\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ yarn add @react-native-firebase/app @react-native-firebase/messaging\n$ npx pod-install ios</code></pre></div>\n<h2>Firebaseプロジェクトの準備</h2>\n<h2>アプリの登録</h2>\n<p>AndroidとiOSそれぞれで登録します。</p>\n<p>登録後、Androidでは<code class=\"language-text\">google-services.json</code>、\niOSでは<code class=\"language-text\">GoogleService-Info.plist</code>をダウンロードします。</p>\n<h2>Android</h2>\n<p><a href=\"https://gibachansblog.hatenablog.jp/entry/2020/08/14/051052\" target=\"_blank\" rel=\"noopener noreferrer\">参考サイト</a></p>\n<h3>firebaseの導入</h3>\n<p><code class=\"language-text\">/android/app</code>に<code class=\"language-text\">google-services.json</code>を配置します。</p>\n<p><code class=\"language-text\">/android/build.gradle</code></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">buildscript {\n    ...\n    dependencies {\n        ...\n        classpath &#39;com.google.gms:google-services:4.3.3&#39; // これを追加\n    }\n}</code></pre></div>\n<p><code class=\"language-text\">/android/app/build.gradle</code></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">apply plugin: &#39;com.google.gms.google-services&#39; // これを追加</code></pre></div>\n<h3><a href=\"https://qiita.com/myzkyy/items/4c286c3d096c5aaa2b3c\" target=\"_blank\" rel=\"noopener noreferrer\">通知チャネル</a></h3>\n<p>Android 8.0（API レベル 26）以降、通知はすべてチャネルに割り当てる必要があります。<br>\n<a href=\"https://developer.android.com/training/notify-user/channels?hl=ja\" target=\"_blank\" rel=\"noopener noreferrer\">公式ドキュメント</a></p>\n<p><code class=\"language-text\">android/app/src/〜/MainActivity.java</code></p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">import</span> <span class=\"token namespace\">android<span class=\"token punctuation\">.</span>app<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">NotificationChannel</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">android<span class=\"token punctuation\">.</span>app<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">NotificationManager</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">android<span class=\"token punctuation\">.</span>os<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Build</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MainActivity</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">ReactActivity</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">createNotificationChannel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Build</span><span class=\"token punctuation\">.</span>VERSION<span class=\"token punctuation\">.</span>SDK_INT <span class=\"token operator\">>=</span> <span class=\"token class-name\">Build</span><span class=\"token punctuation\">.</span>VERSION_CODES<span class=\"token punctuation\">.</span><span class=\"token class-name\">O</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token class-name\">String</span> id <span class=\"token operator\">=</span> <span class=\"token string\">\"notification\"</span><span class=\"token punctuation\">;</span>\n      <span class=\"token class-name\">CharSequence</span> name <span class=\"token operator\">=</span> <span class=\"token string\">\"お知らせ\"</span><span class=\"token punctuation\">;</span>\n      <span class=\"token class-name\">String</span> description <span class=\"token operator\">=</span> <span class=\"token string\">\"新しいメッセージの受信などをお知らせするよ\"</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">int</span> importance <span class=\"token operator\">=</span> <span class=\"token class-name\">NotificationManager</span><span class=\"token punctuation\">.</span>IMPORTANCE_HIGH<span class=\"token punctuation\">;</span>\n      <span class=\"token class-name\">NotificationChannel</span> channel <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">NotificationChannel</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> importance<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      channel<span class=\"token punctuation\">.</span><span class=\"token function\">setDescription</span><span class=\"token punctuation\">(</span>description<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token class-name\">NotificationManager</span> notificationManager <span class=\"token operator\">=</span> <span class=\"token function\">getSystemService</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">NotificationManager</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      notificationManager<span class=\"token punctuation\">.</span><span class=\"token function\">createNotificationChannel</span><span class=\"token punctuation\">(</span>channel<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token annotation punctuation\">@Override</span>\n  <span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">onCreate</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Bundle</span> savedInstanceState<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n    <span class=\"token function\">createNotificationChannel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-text\">firebase.json</code></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">{\n  &quot;react-native&quot;: {\n    ...\n    &quot;messaging_android_notification_channel_id&quot;: &quot;notification&quot;\n  }\n}</code></pre></div>\n<h2>iOS</h2>\n<p><a href=\"https://gibachansblog.hatenablog.jp/entry/2020/08/15/095114\" target=\"_blank\" rel=\"noopener noreferrer\">参考サイト</a></p>\n<h3>APNs証明書の登録</h3>\n<h3>firebaseの導入</h3>\n<p><code class=\"language-text\">AppDelegate.m</code></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">#import &lt;Firebase.h&gt;\n…\n\n- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions\n{\n  …\n  if ([FIRApp defaultApp] == nil) {\n    [FIRApp configure];\n  }</code></pre></div>\n<h3>プッシュ通知の受信を許可</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token operator\">...</span>\n  <span class=\"token comment\">// 通知の許可をリクエストする</span>\n  <span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">requestUserPermission</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> authStatus <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">messaging</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">requestPermission</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> enabled <span class=\"token operator\">=</span>\n      authStatus <span class=\"token operator\">===</span> messaging<span class=\"token punctuation\">.</span>AuthorizationStatus<span class=\"token punctuation\">.</span><span class=\"token constant\">AUTHORIZED</span> <span class=\"token operator\">||</span>\n      authStatus <span class=\"token operator\">===</span> messaging<span class=\"token punctuation\">.</span>AuthorizationStatus<span class=\"token punctuation\">.</span><span class=\"token constant\">PROVISIONAL</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>enabled<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'通知が許可されました'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 最初に通知の許可をリクエストする</span>\n    <span class=\"token function\">requestUserPermission</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token operator\">...</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token operator\">...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2>JS</h2>\n<h3>トークンの取得</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> token <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">messaging</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getToken</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3>通知時のハンドリング</h3>\n<p><code class=\"language-text\">index.js</code></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">...</span>\n<span class=\"token keyword\">import</span> messaging <span class=\"token keyword\">from</span> <span class=\"token string\">'@react-native-firebase/messaging'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// これを追加する</span>\n\n<span class=\"token comment\">// バックグラウンドで通知を受信</span>\n<span class=\"token function\">messaging</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setBackgroundMessageHandler</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">async</span> <span class=\"token parameter\">remoteMessage</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">[</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>remoteMessage<span class=\"token punctuation\">.</span>notification<span class=\"token operator\">?.</span>title<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">]を受信しました</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nAppRegistry<span class=\"token punctuation\">.</span><span class=\"token function\">registerComponent</span><span class=\"token punctuation\">(</span>appName<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> App<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><code class=\"language-text\">App.js</code></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">...</span>\n<span class=\"token keyword\">import</span> messaging <span class=\"token keyword\">from</span> <span class=\"token string\">'@react-native-firebase/messaging'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// フォアグラウンドで通知を受信</span>\n    <span class=\"token keyword\">const</span> unsubscribe <span class=\"token operator\">=</span> <span class=\"token function\">messaging</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">onMessage</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">async</span> <span class=\"token parameter\">remoteMessage</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">[</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>remoteMessage<span class=\"token punctuation\">.</span>notification<span class=\"token operator\">?.</span>title<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">]を受信しました</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> unsubscribe<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  …\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2>アプリの状態</h2>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Foreground</td>\n<td>アプリが前面にあり動作している状態</td>\n</tr>\n<tr>\n<td>Background</td>\n<td>ホーム画面や他のアプリが前面にあり、アプリが背面で動作している状態</td>\n</tr>\n<tr>\n<td>Quit</td>\n<td>タスクキルなどでアプリが死んでいる状態</td>\n</tr>\n</tbody>\n</table>\n<h2><a href=\"https://qiita.com/iwashi1t/items/517cda73dba715025b6c\" target=\"_blank\" rel=\"noopener noreferrer\">フォアグラウンドでのプッシュ通知表示</a></h2>\n<p><code class=\"language-text\">react-native-push-notification</code> を使用します。</p>\n<!-- \n```js\nPushNotification.configure({\n  onNotification: notification => {\n    // プッシュ通知をタップしたときに呼ばれる\n    // URLを開くなどの処理\n    notification.finish(PushNotificationIOS.FetchResult.NoData);\n    PushNotificationIOS.setApplicationIconBadgeNumber(0);\n  },\n});\n```\n -->\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">showNotification</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">remoteMessage</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  PushNotification<span class=\"token punctuation\">.</span><span class=\"token function\">localNotification</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      title<span class=\"token operator\">:</span> message<span class=\"token punctuation\">.</span>notification<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">,</span>\n      message<span class=\"token operator\">:</span> message<span class=\"token punctuation\">.</span>notification<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2>[Android]通知アイコンの設定</h2>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">showNotification</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">remoteMessage</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  PushNotification<span class=\"token punctuation\">.</span><span class=\"token function\">localNotification</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      largeIcon<span class=\"token operator\">:</span> <span class=\"token string\">'largeIconName'</span><span class=\"token punctuation\">,</span>\n      smallIcon<span class=\"token operator\">:</span> <span class=\"token string\">'smallIconName'</span><span class=\"token punctuation\">,</span>\n      title<span class=\"token operator\">:</span> message<span class=\"token punctuation\">.</span>notification<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">,</span>\n      message<span class=\"token operator\">:</span> message<span class=\"token punctuation\">.</span>notification<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","fields":{"slug":"/post/9"},"frontmatter":{"date":"2020-12-10","title":"第8回 React Native -Firebase・プッシュ通知-","tags":["React Native"],"active":1}}}},"staticQueryHashes":["63159454"]}