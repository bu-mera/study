{"componentChunkName":"component---src-templates-post-js","path":"/post/1","result":{"data":{"markdownRemark":{"html":"<h1>環境構築</h1>\n<p>これは問題ないかな</p>\n<h1>環境変数（react-native-config）</h1>\n<h2>導入</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ yarn add react-native-config</code></pre></div>\n<p>iOSは<code class=\"language-text\">pod install</code>する。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">cd ios/\npod install</code></pre></div>\n<h2>環境毎の設定ファイルの追加</h2>\n<h3>本番</h3>\n<div class=\"gatsby-code-title\">.env</div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token constant\">ENV</span><span class=\"token operator\">=</span>prod</code></pre></div>\n<h3>開発</h3>\n<div class=\"gatsby-code-title\">.env.dev</div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token constant\">ENV</span><span class=\"token operator\">=</span>dev</code></pre></div>\n<h2>OS毎の設定</h2>\n<h3>iOS</h3>\n<h2>Configurationの追加</h2>\n<p><code class=\"language-text\">PROJECT &gt; [ PROJECT_NAME ] &gt; Configurations</code>の+ボタンをクリックして「Duplicate \"Release\" Configurations」を選択し、Nameをつける。(Stagingとかとか)</p>\n<h2>環境毎の設定</h2>\n<h3>アプリ名</h3>\n<p>アプリ名をプレフィックスをつけて区別する。</p>\n<p><code class=\"language-text\">TARGETS &gt; [ PROJECT_NAME ] &gt; Build Settings</code>のタブで<code class=\"language-text\">All</code>と<code class=\"language-text\">Combined</code>が選択されている状態にする。+ボタンから「Add User-Defined Setting」を選択し、<code class=\"language-text\">PROJECT_NAME_PREFIX</code>という名前で作成。任意の環境毎で区別できるように値を設定する。</p>\n<p><code class=\"language-text\">Packaging</code>の<code class=\"language-text\">Product Name</code>で値の先頭に<code class=\"language-text\">${PRODUCT_NAME_PREFIX}</code>を入力する。</p>\n<p><code class=\"language-text\">TARGETS &gt; [ PROJECT_NAME ] &gt; Info</code>の<code class=\"language-text\">Custome iOS Target Properties</code>で「Bundle display name」の値を<code class=\"language-text\">${PRODUCT_NAME}</code>と設定する。\n<em>※ 「Bundle display name」がない場合は追加してください</em></p>\n<h3>バンドルID</h3>\n<p>バンドルIDをサフィックスをつけて区別する。</p>\n<p>アプリ名同様、<code class=\"language-text\">BUNDLE_ID_SUFFIX</code>という名前で作成し、環境毎で区別できるように値を設定する。</p>\n<p><code class=\"language-text\">Packaging</code>の<code class=\"language-text\">Product Bundle Identifier</code>で値の末尾に<code class=\"language-text\">${BUNDLE_ID_SUFFIX}</code>を入力する。</p>\n<h3>Android</h3>\n<p>build.gradleに以下を追記</p>\n<div class=\"gatsby-code-title\">android/app/build.gradle</div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">apply <span class=\"token keyword\">from</span><span class=\"token operator\">:</span> <span class=\"token function\">project</span><span class=\"token punctuation\">(</span><span class=\"token string\">':react-native-config'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>projectDir<span class=\"token punctuation\">.</span><span class=\"token function\">getPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"/dotenv.gradle\"</span></code></pre></div>\n<h2>環境毎に切り替え</h2>\n<h3>iOS</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ ENVFILE=.env.dev npx react-native run-ios</code></pre></div>\n<h3>Android</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ ENVFILE=.env.dev npx react-native run-android</code></pre></div>\n<p>build.gradleに以下を追記</p>\n<div class=\"gatsby-code-title\">android/app/build.gradle</div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">project<span class=\"token punctuation\">.</span>ext<span class=\"token punctuation\">.</span>envConfigFiles <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  debug<span class=\"token operator\">:</span> <span class=\"token string\">\".env.dev\"</span><span class=\"token punctuation\">,</span>\n  staging<span class=\"token operator\">:</span> <span class=\"token string\">\".env.stg\"</span><span class=\"token punctuation\">,</span>\n  release<span class=\"token operator\">:</span> <span class=\"token string\">\".env\"</span>\n<span class=\"token punctuation\">]</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ npx react-native run-android --variant=staging</code></pre></div>\n<h1>[iOS]実機ビルド</h1>\n<h2>Xcodeの起動</h2>\n<p><code class=\"language-text\">ios/${ PROJECT_NAME }.xcworkspace</code>でXcodeを起動させる。</p>\n<h2>Team設定</h2>\n<p><code class=\"language-text\">TARGETS &gt; [ PROJECT_NAME ] &gt; Signing&amp;Capabilities &gt; Signing &gt; Team</code></p>\n<p>自分のアカウント名に変更</p>\n<h2>Nodeのバイナリのパスを変更</h2>\n<h3>パスの確認</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ which node</code></pre></div>\n<p><code class=\"language-text\">TARGETS &gt; [ PROJECT_NAME ] &gt; Build Phases &gt; Bundel React Native code and image</code></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">export NODE_BINARY=node</code></pre></div>\n<p><code class=\"language-text\">node</code>部分を確認したパスに変更する。</p>\n<h2>ビルド</h2>\n<p>Deviceを自分の端末に選択して実行</p>\n<h2>プロファイルとデバイス管理</h2>\n<p><code class=\"language-text\">設定 &gt; 一般 &gt; プロファイルとデバイス管理</code></p>\n<h1>[Android]実機ビルド</h1>\n<p><em><a href=\"https://reactnative.dev/docs/running-on-device\" target=\"_blank\" rel=\"noopener noreferrer\">※ 公式ドキュメント通り</a></em></p>\n<h2>USB経由のデバッグを有効にする</h2>\n<p>端末の開発者向けオプションから「USBデバッグ」を有効にしてください。</p>\n<h2>USB経由でデバイスを接続</h2>\n<p>デバイスの疎通確認</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ adb devices\nList of devices attached\nemulator-5554 offline   # Google emulator\n14ed2fcc device         # Physical device</code></pre></div>\n<h2>ビルド</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ npx react-native run-android</code></pre></div>\n<!-- 一旦なしでいいかな -->\n<!--\n## ビルドバリアントの設定\n\n### ビルドバリアント（Build Variant）とは\n\n2つの要素の組み合わせから構成される。\n\n- ビルドタイプ（BuildType）\n- プロダクトフレーバー（Product Flavor）\n\n||debug|release|\n|---|---|---|\n|dev||devDebug|devRelease|\n|prod|prodDebug|prodRelease|\n-->","fields":{"slug":"/post/1"},"frontmatter":{"title":"【解説】第1回 React Native -環境を整えよう-","date":"2020/10/29","tags":["React Native"]}}},"pageContext":{"prev":{"html":"<h1>React Native 勉強会 第2回 -View-</h1>\n<h2>主要のコンポーネント・API</h2>\n<h3>StyleSheet</h3>\n<p><a href=\"https://reactnative.dev/docs/style\" target=\"_blank\" rel=\"noopener noreferrer\">Style定義</a></p>\n<h3>View</h3>\n<p><a href=\"https://reactnative.dev/docs/view\" target=\"_blank\" rel=\"noopener noreferrer\">ドキュメント</a><br>\n<a href=\"https://reactnative.dev/docs/flexbox\" target=\"_blank\" rel=\"noopener noreferrer\">Flexboxレイアウト</a></p>\n<h3>Text</h3>\n<p><a href=\"https://reactnative.dev/docs/text\" target=\"_blank\" rel=\"noopener noreferrer\">ドキュメント</a></p>\n<h3>Image</h3>\n<p><a href=\"https://reactnative.dev/docs/image\" target=\"_blank\" rel=\"noopener noreferrer\">ドキュメント</a><br>\n<a href=\"https://reactnative.dev/docs/images\" target=\"_blank\" rel=\"noopener noreferrer\">画像データ周り</a></p>\n<h3>TextInput</h3>\n<p><a href=\"https://reactnative.dev/docs/textinput\" target=\"_blank\" rel=\"noopener noreferrer\">ドキュメント</a></p>\n<h3>ScrollView</h3>\n<p><a href=\"https://reactnative.dev/docs/scrollview\" target=\"_blank\" rel=\"noopener noreferrer\">ドキュメント</a></p>\n<h2>その他</h2>\n<h3>FlatList</h3>\n<p>リストデータ用のコンポーネント<br>\n画面で表示される部分のみレンダリングするので、多量のリストデータを表示するときに向いている<br>\n<a href=\"https://reactnative.dev/docs/flatlist\" target=\"_blank\" rel=\"noopener noreferrer\">ドキュメント</a>  </p>\n<h3>KeyboardAvoidingView</h3>\n<p>テキストフォームにフォーカスしたとき、フォームがキーボードで隠れてしまわないように調整してくれるコンポーネント<br>\n<a href=\"https://reactnative.dev/docs/keyboardavoidingview\" target=\"_blank\" rel=\"noopener noreferrer\">ドキュメント</a>  </p>\n<h3>Linking</h3>\n<p><a href=\"https://reactnative.dev/docs/linking\" target=\"_blank\" rel=\"noopener noreferrer\">ドキュメント</a>  </p>\n<h3>StatusBar</h3>\n<p>画面上部のステータスバーの制御<br>\n<a href=\"https://reactnative.dev/docs/statusbar\" target=\"_blank\" rel=\"noopener noreferrer\">ドキュメント</a></p>","fields":{"slug":"/post/2"},"frontmatter":{"date":"2020-10-29","title":"第2回 React Native -View-","tags":["React Native"],"active":0}},"next":{"html":"<h1>React Nativeでのデザインの考え方</h1>\n<p>React NativeのUI構築において、基本となるのがFlexboxです。\nすでに、CSSでも使っていると思いますが、同様の仕組みがReact Nativeにもあります。\n公式でも推奨とされているので、Flexboxを使っていきましょう。</p>\n<h2>Flexboxの基本</h2>\n<p>CSSでは、<code class=\"language-text\">display: flex;</code>と定義していたかと思いますが、React Nativeでは<code class=\"language-text\">flex: 1</code>と定義します。</p>\n<p>CSSと同様の仕組みが用意されているので<code class=\"language-text\">flex-direction</code>や<code class=\"language-text\">justify-content</code>、<code class=\"language-text\">align-items</code>などのプロパティがあるが、大きな違いとして<code class=\"language-text\">キャメルケース</code>で記載する必要があります。後ほどStyleSheetの記載方法で詳しくやろうと思います。</p>\n<h3>flexDirection</h3>\n<p>ここら辺は問題ないでしょう</p>\n<h3>justifyContent</h3>\n<p>ここら辺は問題ないでしょう</p>\n<h3>alignItems</h3>\n<p>ここら辺は問題ないでしょう</p>\n<h2>Styleの適用方法</h2>\n<p><code class=\"language-text\">StyleSheet.create</code>を使って定義します。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> StyleSheet <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-native'</span>\n\n<span class=\"token keyword\">const</span> styles <span class=\"token operator\">=</span> StyleSheet<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  container<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    flex<span class=\"token operator\">:</span> <span class=\"token number\">1</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>定義したstyleを下記のようにしてコンポーネントに割り当てます。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>View style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>styles<span class=\"token punctuation\">.</span>container<span class=\"token punctuation\">}</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>View<span class=\"token operator\">></span></code></pre></div>\n<p>また、配列を用いることで、複数のstyleを合成して割り当てることもできます。<br>\n同一の項目がある場合は、配列の後ろの要素の方が優先されます。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> styles <span class=\"token operator\">=</span> StyleSheet<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  style1<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    marginTop<span class=\"token operator\">:</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span>\n    backgroundColor<span class=\"token operator\">:</span> <span class=\"token string\">'red'</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  style2<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    marginBottom<span class=\"token operator\">:</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span>\n    backgroundColor<span class=\"token operator\">:</span> <span class=\"token string\">'blue'</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>View style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">[</span>styles<span class=\"token punctuation\">.</span>style1<span class=\"token punctuation\">,</span> styles<span class=\"token punctuation\">.</span>style2<span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>View<span class=\"token operator\">></span></code></pre></div>\n<p>上記の例の場合、下記のstyleが割り当てられます。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span>\n  marginTop<span class=\"token operator\">:</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span>\n  marginBottom<span class=\"token operator\">:</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span>\n  backgroundColor<span class=\"token operator\">:</span> <span class=\"token string\">'blue'</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2>実際にUIを構築していこう</h2>\n<p>以下演習では各演習用のJSファイル（例えば<code class=\"language-text\">lesson1.js</code>）を作成してください。</p>\n<p>各演習用のサンプルコード</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> StyleSheet<span class=\"token punctuation\">,</span> Text<span class=\"token punctuation\">,</span> View <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-native'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Lesson1</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>View style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>styles<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>View style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>styles<span class=\"token punctuation\">.</span>item<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>Text<span class=\"token operator\">></span><span class=\"token number\">1</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Text<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>View<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>View style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>styles<span class=\"token punctuation\">.</span>item<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>Text<span class=\"token operator\">></span><span class=\"token number\">2</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Text<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>View<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>View style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>styles<span class=\"token punctuation\">.</span>item<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>Text<span class=\"token operator\">></span><span class=\"token number\">3</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Text<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>View<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>View<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> styles <span class=\"token operator\">=</span> StyleSheet<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  body<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    flex<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  item<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    height<span class=\"token operator\">:</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span>\n    width<span class=\"token operator\">:</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span>\n    backgroundColor<span class=\"token operator\">:</span> <span class=\"token string\">'#bec6cc'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> Lesson1<span class=\"token punctuation\">;</span></code></pre></div>\n<p>作成したJSファイルを<code class=\"language-text\">App.js</code>にインポートして、反映してください。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> Lesson1 <span class=\"token keyword\">from</span> <span class=\"token string\">'./lesson1'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>Lesson1 <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>演習1:横並びにするためにStyleSheetを作ってください。</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>View<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>View<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Text<span class=\"token operator\">></span><span class=\"token number\">1</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Text<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>View<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>View<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Text<span class=\"token operator\">></span><span class=\"token number\">2</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Text<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>View<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>View<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Text<span class=\"token operator\">></span><span class=\"token number\">3</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Text<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>View<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>View<span class=\"token operator\">></span></code></pre></div>\n<h3>演習2:逆順に表示するためにStyleSheetを作ってください。（JSXは演習1と同様）</h3>\n<h3>演習3:等間隔で余白を開けて、縦並びするためにStyleSheetを作ってください。（JSXは演習1と同様）</h3>\n<h3>演習4:画面中央に要素を配置するためにStyleSheetを作ってください。</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>View<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>View<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Text<span class=\"token operator\">></span>center<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Text<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>View<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>View<span class=\"token operator\">></span></code></pre></div>\n<h3>演習5:下の画像のようなレイアウトを構築してください。上から高さが1:2:3となっています。（JSXは演習1と同様）</h3>\n<img src=\"/static/f0070026a05328f5006ad1ef4aea555d/image00003-01.png\" width=\"150\" alt=\"演習5のレイアウト\">\n<h3>演習6:下の画像のようなレイアウトを構築してください。機能の実装はしなくて良いです。</h3>\n<img src=\"/static/9d32c9b8d0601abdf223a6762e335568/image00003-02.jpg\" width=\"150\" alt=\"演習6のレイアウト\">\n<h2>追加</h2>\n<h3>Text</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Text <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-native'</span></code></pre></div>\n<p>テキストの表示に使用します。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>Text<span class=\"token operator\">></span>\n  text\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Text<span class=\"token operator\">></span></code></pre></div>\n<p>ネストさせて、一部のテキストのみへのstyleの適用や上書きすることも可能です。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>Text style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> fontWeight<span class=\"token operator\">:</span> <span class=\"token string\">'bold'</span><span class=\"token punctuation\">,</span> color<span class=\"token operator\">:</span> <span class=\"token string\">'blue'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n  text\n  <span class=\"token operator\">&lt;</span>Text style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> color<span class=\"token operator\">:</span> <span class=\"token string\">'red'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n    nestedText\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Text<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Text<span class=\"token operator\">></span></code></pre></div>\n<h3>ScrollView</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> ScrollView <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-native'</span></code></pre></div>\n<p>コンポーネントをScrollViewでラップすることで、スクロールできるようになります。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>ScrollView<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>Text<span class=\"token operator\">></span>\n    長文\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Text<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ScrollView<span class=\"token operator\">></span></code></pre></div>\n<h2>追加演習</h2>\n<p>以下演習ではダンダダン案件で使用されたUIの実装をしていただきます。<br>\nサムネイル画像・アイコンは実装せず、<code class=\"language-text\">View</code>で背景色もしくはボーダーを設定してください。 </p>\n<h3>追加演習1:下の画像のようなレイアウトを作成してください。</h3>\n<img src=\"/static/2336a41b50059dee67942f09b489a59b/image00003-03.png\" width=\"250\" alt=\"追加演習1のレイアウト\">\n<h3>追加演習2:下の画像のようなレイアウトを作成してください。</h3>\n<img src=\"/static/2e171c877bd558f26562b18f5183c881/image00003-04.png\" width=\"250\" alt=\"追加演習2のレイアウト\">\n<h3>追加演習3:下の画像のようなレイアウトを作成してください。</h3>\n<img src=\"/static/7deb566fec1254648ce8d9313b18832a/image00003-05.png\" width=\"250\" alt=\"追加演習3のレイアウト\">\n<h3>追加演習4:下の画像のようなレイアウトを作成してください。加えて、スクロールできるようにしてください。</h3>\n<img src=\"/static/9e5f4cf146cb80739d832e9163e31154/image00003-06.png\" width=\"250\" alt=\"追加演習4のレイアウト\">\n<h2>以下関連リンク</h2>\n<!-- ## 主要のコンポーネント・API -->\n<h3>StyleSheet</h3>\n<p><a href=\"https://reactnative.dev/docs/stylesheet\" target=\"_blank\" rel=\"noopener noreferrer\">ドキュメント</a><br>\n<a href=\"https://reactnative.dev/docs/style\" target=\"_blank\" rel=\"noopener noreferrer\">Style定義</a></p>\n<h3>View</h3>\n<p><a href=\"https://reactnative.dev/docs/view\" target=\"_blank\" rel=\"noopener noreferrer\">ドキュメント</a><br>\n<a href=\"https://reactnative.dev/docs/flexbox\" target=\"_blank\" rel=\"noopener noreferrer\">Flexboxレイアウト</a></p>\n<h3>Text</h3>\n<p><a href=\"https://reactnative.dev/docs/text\" target=\"_blank\" rel=\"noopener noreferrer\">ドキュメント</a></p>\n<h3>ScrollView</h3>\n<p><a href=\"https://reactnative.dev/docs/scrollview\" target=\"_blank\" rel=\"noopener noreferrer\">ドキュメント</a></p>\n<!--\n### Image\n[ドキュメント](https://reactnative.dev/docs/image)  \n[画像データ周り](https://reactnative.dev/docs/images)\n\n### TextInput\n[ドキュメント](https://reactnative.dev/docs/textinput) -->\n<!--\n## その他\n\n### FlatList\nリストデータ用のコンポーネント  \n画面で表示される部分のみレンダリングするので、多量のリストデータを表示するときに向いている  \n[ドキュメント](https://reactnative.dev/docs/flatlist)  \n\n### KeyboardAvoidingView\nテキストフォームにフォーカスしたとき、フォームがキーボードで隠れてしまわないように調整してくれるコンポーネント  \n[ドキュメント](https://reactnative.dev/docs/keyboardavoidingview)  \n\n### Linking\n[ドキュメント](https://reactnative.dev/docs/linking)  \n\n### StatusBar\n画面上部のステータスバーの制御  \n[ドキュメント](https://reactnative.dev/docs/statusbar) -->","fields":{"slug":"/post/3"},"frontmatter":{"date":"2020-10-29","title":"第2回 React Native -FlexboxとStyleSheet-","tags":["React Native"],"active":1}}}},"staticQueryHashes":["63159454"]}